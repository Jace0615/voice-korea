name: Dev deploy

on:
  push:
    branches:
      - dev

env:
  CARGO_TERM_COLOR: always

jobs:
  web-deployment:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: Cache builder
        id: cache-builder
        uses: actions/cache@v3
        with:
          key: cache-builder-new
          path: |
            target

      - name: Install dioxus-cli
        run: |
          cargo install --version 0.6.0-rc.0 dioxus-cli

      - name: Deploy APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          env
          npm i -g aws-cdk tailwindcss
          ENV=dev make deploy-web-if-needed

  api-deployment:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: API Cache builder
        id: api-cache-builder
        uses: actions/cache@v3
        with:
          key: api-cache-builder
          path: |
            target

      - name: Deploy APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NONCE_LAB_API_TOKEN: ${{ secrets.NONCE_LAB_API_TOKEN }}
        run: |
          npm i -g aws-cdk
          ENV=dev make deploy-api-if-needed

  create-release-pr:
    runs-on: ubuntu-latest
    needs: [web-deployment, api-deployment]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}
      - name: Git pr release action
        uses: grassedge/git-pr-release-action@v1.0
        with:
          base: main
          head: dev
          token: ${{ secrets.GITHUB_TOKEN }}
