name: PR Testing

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  CARGO_TERM_COLOR: always

jobs:
  dx-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: Install dioxus-cli
        run: |
          cargo install dioxus-cli --version 0.6.0-alpha.4

      - name: Dioxus Lint
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dx check -p platform

  build-deployment:
    runs-on: ubuntu-latest
    needs: [dx-check]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: Install dioxus-cli
        run: |
          cargo install dioxus-cli --version 0.6.0-alpha.4

      - name: Cache builder
        id: test-cache-builder
        uses: actions/cache@v3
        with:
          key: test-cache-builder
          path: |
            target

      - name: Testing
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          make test
